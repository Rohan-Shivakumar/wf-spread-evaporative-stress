import matplotlib.pyplot as plt
import pandas as pd
import glob
import os
import numpy as np

def process_fire_data(folder_path, days_range=14):
    file_paths = glob.glob(os.path.join(folder_path, '*.csv'))
    model_data = {}

    for file in file_paths:
        model_name = os.path.basename(file).split('_daily_etof')[0]
        df = pd.read_csv(file)
        df['time'] = pd.to_datetime(df['time'])
        model_data[model_name] = df.groupby('time').apply(
            lambda x: (x['etof'] * x['hectares']).sum() / x['hectares'].sum()
        )

    combined_df = pd.concat(model_data.values(), axis=1)
    combined_df.columns = model_data.keys()
    combined_df.index.name = 'time'
    combined_df['mean'] = combined_df.mean(axis=1)
    combined_df['std'] = combined_df.std(axis=1)
    combined_df['upper_bound'] = combined_df['mean'] + combined_df['std']
    combined_df['lower_bound'] = combined_df['mean'] - combined_df['std']
    combined_df = combined_df.iloc[:days_range * 2 + 1]  # Assuming data is pre-sorted
    combined_df.index = range(-days_range, days_range + 1)
    
    return combined_df

fires = {
    # write paths for all fires
}

days_range = 14
fire_data = {name: process_fire_data(path, days_range) for name, path in fires.items()}

# Plotting combined data
plt.figure(figsize=(14, 7))

colors = ['black', 'pink', 'orange', 'green', 'purple', 'brown', 'blue', 'yellow', 'cyan', 'magenta']  # Different colors for each fire
for i, (fire_name, data) in enumerate(fire_data.items()):
    plt.plot(
        data.index,
        data['mean'],
        label=f'{fire_name}',
        color=colors[i],
        linewidth=2
    )
    plt.fill_between(
        data.index,
        data['lower_bound'],
        data['upper_bound'],
        color=colors[i],
        alpha=0.3,
        label=None
    )

plt.axvline(
    x=0,
    color='red',
    linestyle=':',
    linewidth=2,
    label='Fire Edge'
)

plt.xlabel('Days from Fire Edge', fontsize=12)
plt.ylabel('Evaporative Stress (0-1, high to low, unitless)', fontsize=12)
plt.title('Comparison of Evaporative Stress Across Fires', fontsize=14)
plt.xticks(
    ticks=range(-days_range, days_range + 1, 2),
    labels=[f"{x}" for x in range(-days_range, days_range + 1, 2)],
    fontsize=10
)
plt.legend(fontsize=10)
plt.grid(alpha=0.3)
plt.ylim(0, 1.2)

plt.tight_layout()
plt.show()
